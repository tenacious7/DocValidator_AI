{
  "name": "ai-document-validation-system",
  "version": "2.0.0",
  "description": "Comprehensive AI-powered document validation system with 95% accuracy target",
  "main": "backend/src/server.js",
  "type": "module",
  "scripts": {
    "dev": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\"",
    "dev:backend": "nodemon backend/src/server.js",
    "dev:frontend": "cd frontend && npm run dev",
    "dev:ai": "cd ai-services && python -m uvicorn main:app --reload --port 8000",
    "dev:all": "concurrently \"npm run dev:backend\" \"npm run dev:frontend\" \"npm run dev:ai\"",
    "build": "npm run build:frontend && npm run build:backend",
    "build:frontend": "cd frontend && npm run build",
    "build:backend": "cd backend && npm run build",
    "test": "npm run test:backend && npm run test:frontend && npm run test:ai",
    "test:backend": "cd backend && npm test",
    "test:frontend": "cd frontend && npm test",
    "test:ai": "cd ai-services && python -m pytest",
    "test:e2e": "cd tests/e2e && npm test",
    "test:performance": "cd tests/performance && npm test",
    "lint": "eslint . --ext .js,.jsx,.ts,.tsx",
    "lint:fix": "eslint . --ext .js,.jsx,.ts,.tsx --fix",
    "deploy:azure": "az webapp deploy --resource-group rg-docvalidation --name app-docvalidation-api",
    "deploy:netlify": "cd frontend && npm run build && netlify deploy --prod",
    "docker:build": "docker-compose build",
    "docker:up": "docker-compose up -d",
    "docker:down": "docker-compose down",
    "infra:deploy": "cd infrastructure/terraform && terraform apply",
    "infra:destroy": "cd infrastructure/terraform && terraform destroy",
    "docs:serve": "cd docs && python -m http.server 8080",
    "health:check": "node scripts/health-check.js",
    "migrate": "cd backend && npm run migrate",
    "seed": "cd backend && npm run seed"
  },
  "keywords": [
    "ai",
    "document-validation",
    "machine-learning",
    "ocr",
    "fraud-detection",
    "azure",
    "react",
    "nodejs"
  ],
  "author": "AI Document Validation Team",
  "license": "MIT",
  "dependencies": {
    "concurrently": "^8.2.2"
  },
  "devDependencies": {
    "eslint": "^8.57.0",
    "prettier": "^3.2.5",
    "husky": "^9.0.11",
    "lint-staged": "^15.2.2"
  },
  "engines": {
    "node": ">=18.0.0",
    "npm": ">=8.0.0"
  },
  "workspaces": [
    "frontend",
    "backend",
    "tests/*"
  ]
}